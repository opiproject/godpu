/* SPDX-License-Identifier: Apache-2.0
   Copyright (c) 2023 Dell Inc, or its subsidiaries.
*/
// Code generated by mockery v2.23.1. DO NOT EDIT.

package common

import (
	mock "github.com/stretchr/testify/mock"
	grpc "google.golang.org/grpc"
)

// MockClient is an autogenerated mock type for the Client type
type MockClient struct {
	mock.Mock
}

type MockClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockClient) EXPECT() *MockClient_Expecter {
	return &MockClient_Expecter{mock: &_m.Mock}
}

// NewGrpcConn provides a mock function with given fields:
func (_m *MockClient) NewGrpcConn() (grpc.ClientConnInterface, Closer, error) {
	ret := _m.Called()

	var r0 grpc.ClientConnInterface
	var r1 Closer
	var r2 error
	if rf, ok := ret.Get(0).(func() (grpc.ClientConnInterface, Closer, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() grpc.ClientConnInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(grpc.ClientConnInterface)
		}
	}

	if rf, ok := ret.Get(1).(func() Closer); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(Closer)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// MockClient_NewGrpcConn_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NewGrpcConn'
type MockClient_NewGrpcConn_Call struct {
	*mock.Call
}

// NewGrpcConn is a helper method to define mock.On call
func (_e *MockClient_Expecter) NewGrpcConn() *MockClient_NewGrpcConn_Call {
	return &MockClient_NewGrpcConn_Call{Call: _e.mock.On("NewGrpcConn")}
}

func (_c *MockClient_NewGrpcConn_Call) Run(run func()) *MockClient_NewGrpcConn_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockClient_NewGrpcConn_Call) Return(_a0 grpc.ClientConnInterface, _a1 Closer, _a2 error) *MockClient_NewGrpcConn_Call {
	_c.Call.Return(_a0, _a1, _a2)
	return _c
}

func (_c *MockClient_NewGrpcConn_Call) RunAndReturn(run func() (grpc.ClientConnInterface, Closer, error)) *MockClient_NewGrpcConn_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewMockClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockClient creates a new instance of MockClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockClient(t mockConstructorTestingTNewMockClient) *MockClient {
	mock := &MockClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
